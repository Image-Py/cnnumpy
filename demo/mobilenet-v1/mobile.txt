graph(%input1 : Float(1, 3, 224, 224),
      %model.0.0.weight : Float(32, 3, 3, 3),
      %model.0.0.bias : Float(32),
      %model.0.1.weight : Float(32),
      %model.0.1.bias : Float(32),
      %model.0.1.running_mean : Float(32),
      %model.0.1.running_var : Float(32),
      %model.0.1.num_batches_tracked : Long(),
      %model.1.0.weight : Float(32, 1, 3, 3),
      %model.1.0.bias : Float(32),
      %model.1.1.weight : Float(32),
      %model.1.1.bias : Float(32),
      %model.1.1.running_mean : Float(32),
      %model.1.1.running_var : Float(32),
      %model.1.1.num_batches_tracked : Long(),
      %model.1.3.weight : Float(64, 32, 1, 1),
      %model.1.3.bias : Float(64),
      %model.1.4.weight : Float(64),
      %model.1.4.bias : Float(64),
      %model.1.4.running_mean : Float(64),
      %model.1.4.running_var : Float(64),
      %model.1.4.num_batches_tracked : Long(),
      %model.2.0.weight : Float(64, 1, 3, 3),
      %model.2.0.bias : Float(64),
      %model.2.1.weight : Float(64),
      %model.2.1.bias : Float(64),
      %model.2.1.running_mean : Float(64),
      %model.2.1.running_var : Float(64),
      %model.2.1.num_batches_tracked : Long(),
      %model.2.3.weight : Float(128, 64, 1, 1),
      %model.2.3.bias : Float(128),
      %model.2.4.weight : Float(128),
      %model.2.4.bias : Float(128),
      %model.2.4.running_mean : Float(128),
      %model.2.4.running_var : Float(128),
      %model.2.4.num_batches_tracked : Long(),
      %model.3.0.weight : Float(128, 1, 3, 3),
      %model.3.0.bias : Float(128),
      %model.3.1.weight : Float(128),
      %model.3.1.bias : Float(128),
      %model.3.1.running_mean : Float(128),
      %model.3.1.running_var : Float(128),
      %model.3.1.num_batches_tracked : Long(),
      %model.3.3.weight : Float(128, 128, 1, 1),
      %model.3.3.bias : Float(128),
      %model.3.4.weight : Float(128),
      %model.3.4.bias : Float(128),
      %model.3.4.running_mean : Float(128),
      %model.3.4.running_var : Float(128),
      %model.3.4.num_batches_tracked : Long(),
      %model.4.0.weight : Float(128, 1, 3, 3),
      %model.4.0.bias : Float(128),
      %model.4.1.weight : Float(128),
      %model.4.1.bias : Float(128),
      %model.4.1.running_mean : Float(128),
      %model.4.1.running_var : Float(128),
      %model.4.1.num_batches_tracked : Long(),
      %model.4.3.weight : Float(256, 128, 1, 1),
      %model.4.3.bias : Float(256),
      %model.4.4.weight : Float(256),
      %model.4.4.bias : Float(256),
      %model.4.4.running_mean : Float(256),
      %model.4.4.running_var : Float(256),
      %model.4.4.num_batches_tracked : Long(),
      %model.5.0.weight : Float(256, 1, 3, 3),
      %model.5.0.bias : Float(256),
      %model.5.1.weight : Float(256),
      %model.5.1.bias : Float(256),
      %model.5.1.running_mean : Float(256),
      %model.5.1.running_var : Float(256),
      %model.5.1.num_batches_tracked : Long(),
      %model.5.3.weight : Float(256, 256, 1, 1),
      %model.5.3.bias : Float(256),
      %model.5.4.weight : Float(256),
      %model.5.4.bias : Float(256),
      %model.5.4.running_mean : Float(256),
      %model.5.4.running_var : Float(256),
      %model.5.4.num_batches_tracked : Long(),
      %model.6.0.weight : Float(256, 1, 3, 3),
      %model.6.0.bias : Float(256),
      %model.6.1.weight : Float(256),
      %model.6.1.bias : Float(256),
      %model.6.1.running_mean : Float(256),
      %model.6.1.running_var : Float(256),
      %model.6.1.num_batches_tracked : Long(),
      %model.6.3.weight : Float(512, 256, 1, 1),
      %model.6.3.bias : Float(512),
      %model.6.4.weight : Float(512),
      %model.6.4.bias : Float(512),
      %model.6.4.running_mean : Float(512),
      %model.6.4.running_var : Float(512),
      %model.6.4.num_batches_tracked : Long(),
      %model.7.0.weight : Float(512, 1, 3, 3),
      %model.7.0.bias : Float(512),
      %model.7.1.weight : Float(512),
      %model.7.1.bias : Float(512),
      %model.7.1.running_mean : Float(512),
      %model.7.1.running_var : Float(512),
      %model.7.1.num_batches_tracked : Long(),
      %model.7.3.weight : Float(512, 512, 1, 1),
      %model.7.3.bias : Float(512),
      %model.7.4.weight : Float(512),
      %model.7.4.bias : Float(512),
      %model.7.4.running_mean : Float(512),
      %model.7.4.running_var : Float(512),
      %model.7.4.num_batches_tracked : Long(),
      %model.8.0.weight : Float(512, 1, 3, 3),
      %model.8.0.bias : Float(512),
      %model.8.1.weight : Float(512),
      %model.8.1.bias : Float(512),
      %model.8.1.running_mean : Float(512),
      %model.8.1.running_var : Float(512),
      %model.8.1.num_batches_tracked : Long(),
      %model.8.3.weight : Float(512, 512, 1, 1),
      %model.8.3.bias : Float(512),
      %model.8.4.weight : Float(512),
      %model.8.4.bias : Float(512),
      %model.8.4.running_mean : Float(512),
      %model.8.4.running_var : Float(512),
      %model.8.4.num_batches_tracked : Long(),
      %model.9.0.weight : Float(512, 1, 3, 3),
      %model.9.0.bias : Float(512),
      %model.9.1.weight : Float(512),
      %model.9.1.bias : Float(512),
      %model.9.1.running_mean : Float(512),
      %model.9.1.running_var : Float(512),
      %model.9.1.num_batches_tracked : Long(),
      %model.9.3.weight : Float(512, 512, 1, 1),
      %model.9.3.bias : Float(512),
      %model.9.4.weight : Float(512),
      %model.9.4.bias : Float(512),
      %model.9.4.running_mean : Float(512),
      %model.9.4.running_var : Float(512),
      %model.9.4.num_batches_tracked : Long(),
      %model.10.0.weight : Float(512, 1, 3, 3),
      %model.10.0.bias : Float(512),
      %model.10.1.weight : Float(512),
      %model.10.1.bias : Float(512),
      %model.10.1.running_mean : Float(512),
      %model.10.1.running_var : Float(512),
      %model.10.1.num_batches_tracked : Long(),
      %model.10.3.weight : Float(512, 512, 1, 1),
      %model.10.3.bias : Float(512),
      %model.10.4.weight : Float(512),
      %model.10.4.bias : Float(512),
      %model.10.4.running_mean : Float(512),
      %model.10.4.running_var : Float(512),
      %model.10.4.num_batches_tracked : Long(),
      %model.11.0.weight : Float(512, 1, 3, 3),
      %model.11.0.bias : Float(512),
      %model.11.1.weight : Float(512),
      %model.11.1.bias : Float(512),
      %model.11.1.running_mean : Float(512),
      %model.11.1.running_var : Float(512),
      %model.11.1.num_batches_tracked : Long(),
      %model.11.3.weight : Float(512, 512, 1, 1),
      %model.11.3.bias : Float(512),
      %model.11.4.weight : Float(512),
      %model.11.4.bias : Float(512),
      %model.11.4.running_mean : Float(512),
      %model.11.4.running_var : Float(512),
      %model.11.4.num_batches_tracked : Long(),
      %model.12.0.weight : Float(512, 1, 3, 3),
      %model.12.0.bias : Float(512),
      %model.12.1.weight : Float(512),
      %model.12.1.bias : Float(512),
      %model.12.1.running_mean : Float(512),
      %model.12.1.running_var : Float(512),
      %model.12.1.num_batches_tracked : Long(),
      %model.12.3.weight : Float(1024, 512, 1, 1),
      %model.12.3.bias : Float(1024),
      %model.12.4.weight : Float(1024),
      %model.12.4.bias : Float(1024),
      %model.12.4.running_mean : Float(1024),
      %model.12.4.running_var : Float(1024),
      %model.12.4.num_batches_tracked : Long(),
      %model.13.0.weight : Float(1024, 1, 3, 3),
      %model.13.0.bias : Float(1024),
      %model.13.1.weight : Float(1024),
      %model.13.1.bias : Float(1024),
      %model.13.1.running_mean : Float(1024),
      %model.13.1.running_var : Float(1024),
      %model.13.1.num_batches_tracked : Long(),
      %model.13.3.weight : Float(1024, 1024, 1, 1),
      %model.13.3.bias : Float(1024),
      %model.13.4.weight : Float(1024),
      %model.13.4.bias : Float(1024),
      %model.13.4.running_mean : Float(1024),
      %model.13.4.running_var : Float(1024),
      %model.13.4.num_batches_tracked : Long(),
      %fc.weight : Float(1000, 1024),
      %fc.bias : Float(1000)):
  %192 : Float(1, 32, 112, 112) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2]](%input1, %model.0.0.weight, %model.0.0.bias), scope: Net/Sequential[model]/Sequential[0]/Conv2d[0]
  %193 : Float(1, 32, 112, 112) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%192, %model.0.1.weight, %model.0.1.bias, %model.0.1.running_mean, %model.0.1.running_var), scope: Net/Sequential[model]/Sequential[0]/BatchNorm2d[1]
  %194 : Float(1, 32, 112, 112) = onnx::Relu(%193), scope: Net/Sequential[model]/Sequential[0]/ReLU[2]
  %195 : Float(1, 32, 112, 112) = onnx::Conv[dilations=[1, 1], group=32, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%194, %model.1.0.weight, %model.1.0.bias), scope: Net/Sequential[model]/Sequential[1]/Conv2d[0]
  %196 : Float(1, 32, 112, 112) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%195, %model.1.1.weight, %model.1.1.bias, %model.1.1.running_mean, %model.1.1.running_var), scope: Net/Sequential[model]/Sequential[1]/BatchNorm2d[1]
  %197 : Float(1, 32, 112, 112) = onnx::Relu(%196), scope: Net/Sequential[model]/Sequential[1]/ReLU[2]
  %198 : Float(1, 64, 112, 112) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%197, %model.1.3.weight, %model.1.3.bias), scope: Net/Sequential[model]/Sequential[1]/Conv2d[3]
  %199 : Float(1, 64, 112, 112) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%198, %model.1.4.weight, %model.1.4.bias, %model.1.4.running_mean, %model.1.4.running_var), scope: Net/Sequential[model]/Sequential[1]/BatchNorm2d[4]
  %200 : Float(1, 64, 112, 112) = onnx::Relu(%199), scope: Net/Sequential[model]/Sequential[1]/ReLU[5]
  %201 : Float(1, 64, 56, 56) = onnx::Conv[dilations=[1, 1], group=64, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2]](%200, %model.2.0.weight, %model.2.0.bias), scope: Net/Sequential[model]/Sequential[2]/Conv2d[0]
  %202 : Float(1, 64, 56, 56) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%201, %model.2.1.weight, %model.2.1.bias, %model.2.1.running_mean, %model.2.1.running_var), scope: Net/Sequential[model]/Sequential[2]/BatchNorm2d[1]
  %203 : Float(1, 64, 56, 56) = onnx::Relu(%202), scope: Net/Sequential[model]/Sequential[2]/ReLU[2]
  %204 : Float(1, 128, 56, 56) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%203, %model.2.3.weight, %model.2.3.bias), scope: Net/Sequential[model]/Sequential[2]/Conv2d[3]
  %205 : Float(1, 128, 56, 56) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%204, %model.2.4.weight, %model.2.4.bias, %model.2.4.running_mean, %model.2.4.running_var), scope: Net/Sequential[model]/Sequential[2]/BatchNorm2d[4]
  %206 : Float(1, 128, 56, 56) = onnx::Relu(%205), scope: Net/Sequential[model]/Sequential[2]/ReLU[5]
  %207 : Float(1, 128, 56, 56) = onnx::Conv[dilations=[1, 1], group=128, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%206, %model.3.0.weight, %model.3.0.bias), scope: Net/Sequential[model]/Sequential[3]/Conv2d[0]
  %208 : Float(1, 128, 56, 56) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%207, %model.3.1.weight, %model.3.1.bias, %model.3.1.running_mean, %model.3.1.running_var), scope: Net/Sequential[model]/Sequential[3]/BatchNorm2d[1]
  %209 : Float(1, 128, 56, 56) = onnx::Relu(%208), scope: Net/Sequential[model]/Sequential[3]/ReLU[2]
  %210 : Float(1, 128, 56, 56) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%209, %model.3.3.weight, %model.3.3.bias), scope: Net/Sequential[model]/Sequential[3]/Conv2d[3]
  %211 : Float(1, 128, 56, 56) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%210, %model.3.4.weight, %model.3.4.bias, %model.3.4.running_mean, %model.3.4.running_var), scope: Net/Sequential[model]/Sequential[3]/BatchNorm2d[4]
  %212 : Float(1, 128, 56, 56) = onnx::Relu(%211), scope: Net/Sequential[model]/Sequential[3]/ReLU[5]
  %213 : Float(1, 128, 28, 28) = onnx::Conv[dilations=[1, 1], group=128, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2]](%212, %model.4.0.weight, %model.4.0.bias), scope: Net/Sequential[model]/Sequential[4]/Conv2d[0]
  %214 : Float(1, 128, 28, 28) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%213, %model.4.1.weight, %model.4.1.bias, %model.4.1.running_mean, %model.4.1.running_var), scope: Net/Sequential[model]/Sequential[4]/BatchNorm2d[1]
  %215 : Float(1, 128, 28, 28) = onnx::Relu(%214), scope: Net/Sequential[model]/Sequential[4]/ReLU[2]
  %216 : Float(1, 256, 28, 28) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%215, %model.4.3.weight, %model.4.3.bias), scope: Net/Sequential[model]/Sequential[4]/Conv2d[3]
  %217 : Float(1, 256, 28, 28) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%216, %model.4.4.weight, %model.4.4.bias, %model.4.4.running_mean, %model.4.4.running_var), scope: Net/Sequential[model]/Sequential[4]/BatchNorm2d[4]
  %218 : Float(1, 256, 28, 28) = onnx::Relu(%217), scope: Net/Sequential[model]/Sequential[4]/ReLU[5]
  %219 : Float(1, 256, 28, 28) = onnx::Conv[dilations=[1, 1], group=256, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%218, %model.5.0.weight, %model.5.0.bias), scope: Net/Sequential[model]/Sequential[5]/Conv2d[0]
  %220 : Float(1, 256, 28, 28) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%219, %model.5.1.weight, %model.5.1.bias, %model.5.1.running_mean, %model.5.1.running_var), scope: Net/Sequential[model]/Sequential[5]/BatchNorm2d[1]
  %221 : Float(1, 256, 28, 28) = onnx::Relu(%220), scope: Net/Sequential[model]/Sequential[5]/ReLU[2]
  %222 : Float(1, 256, 28, 28) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%221, %model.5.3.weight, %model.5.3.bias), scope: Net/Sequential[model]/Sequential[5]/Conv2d[3]
  %223 : Float(1, 256, 28, 28) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%222, %model.5.4.weight, %model.5.4.bias, %model.5.4.running_mean, %model.5.4.running_var), scope: Net/Sequential[model]/Sequential[5]/BatchNorm2d[4]
  %224 : Float(1, 256, 28, 28) = onnx::Relu(%223), scope: Net/Sequential[model]/Sequential[5]/ReLU[5]
  %225 : Float(1, 256, 14, 14) = onnx::Conv[dilations=[1, 1], group=256, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2]](%224, %model.6.0.weight, %model.6.0.bias), scope: Net/Sequential[model]/Sequential[6]/Conv2d[0]
  %226 : Float(1, 256, 14, 14) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%225, %model.6.1.weight, %model.6.1.bias, %model.6.1.running_mean, %model.6.1.running_var), scope: Net/Sequential[model]/Sequential[6]/BatchNorm2d[1]
  %227 : Float(1, 256, 14, 14) = onnx::Relu(%226), scope: Net/Sequential[model]/Sequential[6]/ReLU[2]
  %228 : Float(1, 512, 14, 14) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%227, %model.6.3.weight, %model.6.3.bias), scope: Net/Sequential[model]/Sequential[6]/Conv2d[3]
  %229 : Float(1, 512, 14, 14) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%228, %model.6.4.weight, %model.6.4.bias, %model.6.4.running_mean, %model.6.4.running_var), scope: Net/Sequential[model]/Sequential[6]/BatchNorm2d[4]
  %230 : Float(1, 512, 14, 14) = onnx::Relu(%229), scope: Net/Sequential[model]/Sequential[6]/ReLU[5]
  %231 : Float(1, 512, 14, 14) = onnx::Conv[dilations=[1, 1], group=512, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%230, %model.7.0.weight, %model.7.0.bias), scope: Net/Sequential[model]/Sequential[7]/Conv2d[0]
  %232 : Float(1, 512, 14, 14) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%231, %model.7.1.weight, %model.7.1.bias, %model.7.1.running_mean, %model.7.1.running_var), scope: Net/Sequential[model]/Sequential[7]/BatchNorm2d[1]
  %233 : Float(1, 512, 14, 14) = onnx::Relu(%232), scope: Net/Sequential[model]/Sequential[7]/ReLU[2]
  %234 : Float(1, 512, 14, 14) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%233, %model.7.3.weight, %model.7.3.bias), scope: Net/Sequential[model]/Sequential[7]/Conv2d[3]
  %235 : Float(1, 512, 14, 14) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%234, %model.7.4.weight, %model.7.4.bias, %model.7.4.running_mean, %model.7.4.running_var), scope: Net/Sequential[model]/Sequential[7]/BatchNorm2d[4]
  %236 : Float(1, 512, 14, 14) = onnx::Relu(%235), scope: Net/Sequential[model]/Sequential[7]/ReLU[5]
  %237 : Float(1, 512, 14, 14) = onnx::Conv[dilations=[1, 1], group=512, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%236, %model.8.0.weight, %model.8.0.bias), scope: Net/Sequential[model]/Sequential[8]/Conv2d[0]
  %238 : Float(1, 512, 14, 14) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%237, %model.8.1.weight, %model.8.1.bias, %model.8.1.running_mean, %model.8.1.running_var), scope: Net/Sequential[model]/Sequential[8]/BatchNorm2d[1]
  %239 : Float(1, 512, 14, 14) = onnx::Relu(%238), scope: Net/Sequential[model]/Sequential[8]/ReLU[2]
  %240 : Float(1, 512, 14, 14) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%239, %model.8.3.weight, %model.8.3.bias), scope: Net/Sequential[model]/Sequential[8]/Conv2d[3]
  %241 : Float(1, 512, 14, 14) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%240, %model.8.4.weight, %model.8.4.bias, %model.8.4.running_mean, %model.8.4.running_var), scope: Net/Sequential[model]/Sequential[8]/BatchNorm2d[4]
  %242 : Float(1, 512, 14, 14) = onnx::Relu(%241), scope: Net/Sequential[model]/Sequential[8]/ReLU[5]
  %243 : Float(1, 512, 14, 14) = onnx::Conv[dilations=[1, 1], group=512, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%242, %model.9.0.weight, %model.9.0.bias), scope: Net/Sequential[model]/Sequential[9]/Conv2d[0]
  %244 : Float(1, 512, 14, 14) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%243, %model.9.1.weight, %model.9.1.bias, %model.9.1.running_mean, %model.9.1.running_var), scope: Net/Sequential[model]/Sequential[9]/BatchNorm2d[1]
  %245 : Float(1, 512, 14, 14) = onnx::Relu(%244), scope: Net/Sequential[model]/Sequential[9]/ReLU[2]
  %246 : Float(1, 512, 14, 14) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%245, %model.9.3.weight, %model.9.3.bias), scope: Net/Sequential[model]/Sequential[9]/Conv2d[3]
  %247 : Float(1, 512, 14, 14) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%246, %model.9.4.weight, %model.9.4.bias, %model.9.4.running_mean, %model.9.4.running_var), scope: Net/Sequential[model]/Sequential[9]/BatchNorm2d[4]
  %248 : Float(1, 512, 14, 14) = onnx::Relu(%247), scope: Net/Sequential[model]/Sequential[9]/ReLU[5]
  %249 : Float(1, 512, 14, 14) = onnx::Conv[dilations=[1, 1], group=512, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%248, %model.10.0.weight, %model.10.0.bias), scope: Net/Sequential[model]/Sequential[10]/Conv2d[0]
  %250 : Float(1, 512, 14, 14) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%249, %model.10.1.weight, %model.10.1.bias, %model.10.1.running_mean, %model.10.1.running_var), scope: Net/Sequential[model]/Sequential[10]/BatchNorm2d[1]
  %251 : Float(1, 512, 14, 14) = onnx::Relu(%250), scope: Net/Sequential[model]/Sequential[10]/ReLU[2]
  %252 : Float(1, 512, 14, 14) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%251, %model.10.3.weight, %model.10.3.bias), scope: Net/Sequential[model]/Sequential[10]/Conv2d[3]
  %253 : Float(1, 512, 14, 14) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%252, %model.10.4.weight, %model.10.4.bias, %model.10.4.running_mean, %model.10.4.running_var), scope: Net/Sequential[model]/Sequential[10]/BatchNorm2d[4]
  %254 : Float(1, 512, 14, 14) = onnx::Relu(%253), scope: Net/Sequential[model]/Sequential[10]/ReLU[5]
  %255 : Float(1, 512, 14, 14) = onnx::Conv[dilations=[1, 1], group=512, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%254, %model.11.0.weight, %model.11.0.bias), scope: Net/Sequential[model]/Sequential[11]/Conv2d[0]
  %256 : Float(1, 512, 14, 14) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%255, %model.11.1.weight, %model.11.1.bias, %model.11.1.running_mean, %model.11.1.running_var), scope: Net/Sequential[model]/Sequential[11]/BatchNorm2d[1]
  %257 : Float(1, 512, 14, 14) = onnx::Relu(%256), scope: Net/Sequential[model]/Sequential[11]/ReLU[2]
  %258 : Float(1, 512, 14, 14) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%257, %model.11.3.weight, %model.11.3.bias), scope: Net/Sequential[model]/Sequential[11]/Conv2d[3]
  %259 : Float(1, 512, 14, 14) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%258, %model.11.4.weight, %model.11.4.bias, %model.11.4.running_mean, %model.11.4.running_var), scope: Net/Sequential[model]/Sequential[11]/BatchNorm2d[4]
  %260 : Float(1, 512, 14, 14) = onnx::Relu(%259), scope: Net/Sequential[model]/Sequential[11]/ReLU[5]
  %261 : Float(1, 512, 7, 7) = onnx::Conv[dilations=[1, 1], group=512, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2]](%260, %model.12.0.weight, %model.12.0.bias), scope: Net/Sequential[model]/Sequential[12]/Conv2d[0]
  %262 : Float(1, 512, 7, 7) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%261, %model.12.1.weight, %model.12.1.bias, %model.12.1.running_mean, %model.12.1.running_var), scope: Net/Sequential[model]/Sequential[12]/BatchNorm2d[1]
  %263 : Float(1, 512, 7, 7) = onnx::Relu(%262), scope: Net/Sequential[model]/Sequential[12]/ReLU[2]
  %264 : Float(1, 1024, 7, 7) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%263, %model.12.3.weight, %model.12.3.bias), scope: Net/Sequential[model]/Sequential[12]/Conv2d[3]
  %265 : Float(1, 1024, 7, 7) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%264, %model.12.4.weight, %model.12.4.bias, %model.12.4.running_mean, %model.12.4.running_var), scope: Net/Sequential[model]/Sequential[12]/BatchNorm2d[4]
  %266 : Float(1, 1024, 7, 7) = onnx::Relu(%265), scope: Net/Sequential[model]/Sequential[12]/ReLU[5]
  %267 : Float(1, 1024, 7, 7) = onnx::Conv[dilations=[1, 1], group=1024, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%266, %model.13.0.weight, %model.13.0.bias), scope: Net/Sequential[model]/Sequential[13]/Conv2d[0]
  %268 : Float(1, 1024, 7, 7) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%267, %model.13.1.weight, %model.13.1.bias, %model.13.1.running_mean, %model.13.1.running_var), scope: Net/Sequential[model]/Sequential[13]/BatchNorm2d[1]
  %269 : Float(1, 1024, 7, 7) = onnx::Relu(%268), scope: Net/Sequential[model]/Sequential[13]/ReLU[2]
  %270 : Float(1, 1024, 7, 7) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%269, %model.13.3.weight, %model.13.3.bias), scope: Net/Sequential[model]/Sequential[13]/Conv2d[3]
  %271 : Float(1, 1024, 7, 7) = onnx::BatchNormalization[epsilon=1e-05, momentum=0.9](%270, %model.13.4.weight, %model.13.4.bias, %model.13.4.running_mean, %model.13.4.running_var), scope: Net/Sequential[model]/Sequential[13]/BatchNorm2d[4]
  %272 : Float(1, 1024, 7, 7) = onnx::Relu(%271), scope: Net/Sequential[model]/Sequential[13]/ReLU[5]
  %273 : Tensor = onnx::Pad[mode="constant", pads=[0, 0, 0, 0, 0, 0, 0, 0], value=0](%272), scope: Net/Sequential[model]/AvgPool2d[14]
  %274 : Float(1, 1024, 1, 1) = onnx::AveragePool[kernel_shape=[7, 7], pads=[0, 0, 0, 0], strides=[7, 7]](%273), scope: Net/Sequential[model]/AvgPool2d[14]
  %275 : Long() = onnx::Constant[value={0}](), scope: Net
  %276 : Tensor = onnx::Shape(%274), scope: Net
  %277 : Long() = onnx::Gather[axis=0](%276, %275), scope: Net
  %278 : Long() = onnx::Constant[value={-1}](), scope: Net
  %279 : Tensor = onnx::Unsqueeze[axes=[0]](%277)
  %280 : Tensor = onnx::Unsqueeze[axes=[0]](%278)
  %281 : Tensor = onnx::Concat[axis=0](%279, %280)
  %282 : Float(1, 1024) = onnx::Reshape(%274, %281), scope: Net
  %output1 : Float(1, 1000) = onnx::Gemm[alpha=1, beta=1, transB=1](%282, %fc.weight, %fc.bias), scope: Net/Linear[fc]
  return (%output1)

